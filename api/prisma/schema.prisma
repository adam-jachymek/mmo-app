// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum ItemType {
  WEAPON
  HELMET
  ARMOR
  LEGS
  POTION
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  username String? @unique

  hp Int? @default(100)
  maxHp Int? @default(100)
  level Int? @default(1)
  exp Int? @default(0)
  maxExp Int? @default(100)
  points Int? @default(5)
  gold Int? @default(0)

  stamina Int? @default(10)
  strength Int? @default(10)
  defence Int? @default(10)
  speed Int? @default(10)
  intelligence Int? @default(10)

  eqStamina Int? @default(0)
  eqStrength Int? @default(0)
  eqDefence Int? @default(0)
  eqSpeed Int? @default(0)
  eqIntelligence Int? @default(0)

  items Item[]
  battle Battle[]

  @@map("users")
}

model ItemPrototype {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  icon  String?
  description String?
  type String?
  minStat Int?
  maxStat Int?
  isEq Boolean?

  items Item[]

  @@map("itemPrototypes")
}

model Item {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  stat Int?
  level Int?
  score Int?
  amount Int?
  equip Boolean? @default(false)

  user User @relation(fields: [userId], references: [id])
  userId Int

  item ItemPrototype @relation(fields: [itemPrototypeId], references: [id])
  itemPrototypeId Int

  @@map("items")
}

model Mob {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  minLevel Int?
  maxLevel Int?
  sprite String?
  hp Int?
  attack Int?
  defence Int?
  giveExp Int?

  map Map? @relation(fields: [mapId], references: [id])
  mapId Int

  mobSpawn MobSpawn[]

  @@map("mobs")
}

model MobSpawn {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  level Int?
  hp Int?
  maxHp Int?
  attack Int?
  defence Int?
  giveExp Int?

  mob Mob @relation(fields: [mobId], references: [id])
  mobId Int

  battle Battle[]

  @@map("mobSpawn")
}

model Map {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String
  minLevel Int?
  maxLevel Int?
  sprite String?

  mobs Mob[]

  @@map("maps")
}

model Battle {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  mobSpawn MobSpawn @relation(fields: [mobSpawnId], references: [id])
  mobSpawnId Int

  user User @relation(fields: [userId], references: [id])
  userId Int

  @@map("battle")
}

model Explore {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title String
  msg String?
  isItem Boolean
  minLevel Int?
  maxLevel Int?
  sprite String?

  @@map("explore")
}
